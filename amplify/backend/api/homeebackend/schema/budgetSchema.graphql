type CustomBudgetCategory @model @auth(rules: [{ allow: private }]) {
  id: ID!
  budgetCategory: BudgetCategory!
  budgetType: String!
  amount: Float!
  budgetID: ID! @index(name: "byBudget")
}

type User
  @model
  @auth(
    rules: [
      { allow: owner, ownerField: "id" }
      { allow: private, operations: [read] }
    ]
  ) {
  id: String
    @auth(
      rules: [
        { allow: owner, operations: [create, read, delete] }
        { allow: private, operations: [read] }
      ]
    )
  name: String!
  description: String
  birthday: AWSDateTime
}

type Budget
  @model(
    queries: {
      get: "getBudget"
      list: "listBudgets"
      # create: "createBudget"
      # delete: "deleteBudget"
    }
  )
  @auth(
    rules: [
      { allow: private }
      { allow: groups, groups: ["admin"], operations: [read, create, delete] }
      { allow: owner }
    ]
  ) {
  id: ID!
  budgets: BudgetCategories
  CustomBudgetCategories: [CustomBudgetCategory]
    @hasMany(indexName: "byBudget", fields: ["id"])
  Expenses: [Expense] @hasMany(indexName: "byBudget", fields: ["id"])
  BudgetTypeRecommendedSpending: BudgetTypeRecommendedSpending @hasOne
  BudgetName: String! @primaryKey
}

type HomeBudgetTypes {
  Rent: Float
  Insurance: Float
  Supplies: Float
}

type FoodBudgetTypes {
  FastFood: Float
  AlcoholAndBars: Float
  Groceries: Float
}

type BudgetCategories {
  Home: HomeBudgetTypes
  AutoAndTransport: String
  BillsAndUtilities: String
  Entertainment: String
  FeesAndCharges: String
  WealthPlanning: String
  Health: String
  Fitness: String
  Income: String
  Misc: String
  PersonalCare: String
  Pets: String
  Uncategorized: String
  Travel: String
  Shopping: String
  Food: FoodBudgetTypes
}

enum BudgetCategory {
  FOOD
  HOME
  LOANS
  AUTOANDTRANSPORT
  BILLSANDUTILITIES
  ENTERTAINMENT
  FEESANDCHARGES
  WEALTHPLANNING
  HEALTH
  FITNESS
  INCOME
  MISC
  PERSONALCARE
  PETS
  UNCATEGORIZED
  TRAVEL
  SHOPPING
}

type BudgetTypeRecommendedSpending
  @model
  @auth(
    rules: [
      {
        allow: groups
        groups: ["admin"]
        operations: [read, create, update, delete]
      }
      { allow: owner }
    ]
  ) {
  id: ID!
  budgetType: BudgetCategories
  recommendedAllocatedSpending: AWSJSON #this will be a JSON with income bands or internal filtering to recommend a value for you. Goal is for this to be smart engine
}

type Expense @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  budgetType: BudgetCategories!
  amount: Float!
  date: AWSDate!
  budgetID: ID! @index(name: "byBudget")
}
